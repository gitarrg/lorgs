org: arrgmin
app: lorrgs
service: lorrgs-api
frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  region: eu-west-1
  stage: ${opt:stage, "dev"}
  runtime: python3.8
  deploymentBucket:
    name: lorrgs-serverless-deployments
  versionFunctions: false


  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource:
        - !GetAtt [MainSqsQueue, "Arn"]

################################################################################
# package:
package:
  individually: true
  patterns:
    - "!*"
    - "!*/**"


plugins:
  - serverless-python-requirements


custom:
  pythonRequirements:
    layer: true


################################################################################
# Functions:
functions:
  main: ${file(serverless/lambda.main.yml)}
  sqs_handler: ${file(serverless/lambda.sqs_handler.yml)}


resources:
  Resources:
    CloudFrontDistribution: ${file(serverless/CloudFrontDistribution.yml)}
    S3CachePolicy: ${file(serverless/S3CachePolicy.yml)}
    ApiOriginCachePolicy: ${file(serverless/ApiOriginCachePolicy.yml)}
    MainSqsQueue: ${file(serverless/sqs.yml)}
